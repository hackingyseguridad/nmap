
--Load required Nmap libraries
local http = require "http"
local nmap = require "nmap"
local shortport = require "shortport"
local stdnse = require "stdnse"

-- Initialize script
local script = {
    name = "CVE-2024-3400",
    description = "Escanea recursos vulnerables Palo Alto CVE-2024-3400.",
    categories = {"default", "safe"},
    author = "hackingyseguridad.com",
    license = "GPLv2",

}
portrule = shortport.http

-- Define function
local function scan_url_for_etag(host, port, url)
    options = {header={}}    options['header']['User-Agent'] = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/86.0.4240.0 Safari/537.36"
    local response = http.get(host, port, "https://"..host.."/"..url, options)
    if response.status == 200 then
        --stdnse.debug1("DEBUG : Response status = 200")
        local etag = response.header["etag"]
        --stdnse.debug1("Header ETag = "..etag)
        if etag then
            local timestamp_str = etag:match("(.+)-(.+)") or etag
            timestamp_str = timestamp_str:gsub('"', '')
            stdnse.debug1("DEBUG timestamp_str = \'"..timestamp_str.."\'")
            local timestamp_int = tonumber(timestamp_str,16)
            local date = os.date("%Y-%m-%d %H:%M:%S", timestamp_int)
            local older_than_cve_date = os.time({year=2024, month=4, day=13}) - timestamp_int > 0
            if older_than_cve_date then
                return string.format("ETag for %s: %s\nTimestamp: %s\nMost probably vulnerable to CVE-2024-3400!", url, etag, date)
            else
                return string.format("ETag for %s: %s\nTimestamp: %s\nNot vulnerable.", url, etag, date)
            end
        else
            return string.format("No ETag header found for %s", url)
        end
    else
        if response.status == nil then
            return "Error : Sin respuesta del servidor"
        else
            return string.format("Failed to fetch %s, status code: %d", url, response.status)
        end
    end
end
-- Define the action function
action = function(host, port)
        output = "Nothing to watch here\n\n"
        results = {}
        if port.protocol == "tcp" and port.state == "open" and  port.number == 443 then
            table.insert(results, scan_url_for_etag(host.ip, port.number, "global-protect/portal/images/bg.png"))
            table.insert(results, scan_url_for_etag(host.ip, port.number, "login/images/favicon.ico"))
            return table.concat(results, "\n\n")
        else
            return "No answer from host"
        end
end
